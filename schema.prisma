// datasource db defines the database connection settings.
// It is configured for PostgreSQL and uses an environment variable for the connection URL.
// The 'extensions' feature enables the use of PostgreSQL-specific data types.
datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

// generator db configures Prisma Client settings.
// It is set up to use Prisma Client Python with asyncio interface and specific features.
generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  previewFeatures      = ["postgresqlExtensions"]
}

model Joke {
  id          String       @id @default(dbgenerated("gen_random_uuid()"))
  text        String
  createdAt   DateTime     @default(now())
  submittedBy String?
  User        User?        @relation(fields: [submittedBy], references: [id])
  JokeRatings JokeRating[]
}

model User {
  id             String       @id @default(dbgenerated("gen_random_uuid()"))
  email          String       @unique
  password       String
  role           UserRole     @default(USER)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  JokeRatings    JokeRating[]
  jokesSubmitted Joke[]
}

model JokeRating {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  rating    Int
  userId    String
  User      User     @relation(fields: [userId], references: [id])
  jokeId    String
  Joke      Joke     @relation(fields: [jokeId], references: [id])
  createdAt DateTime @default(now())
}

enum UserRole {
  USER
  ADMIN
  CONTRIBUTOR
}

